# -*- coding: utf-8 -*-
"""Ejerecicio_cadena_i_estructura.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12KTEiiVNQq-qEXy8jJwBv-G48GxMvX9l

**1.	1. Quin tipus de dada és False?**
"""

b = False

b, type(b)

"""**	2. Quin tipus és None?**"""

x = None
type(x)

"""**3.	3. Quin tipus de dada retorna len("Hola")?**"""

a = "Hola"
len("Hola")

print (type(len("Hola")))

"""**4.	4. Què retorna type(3.0)?**"""

a = 0.3
print (type (a))

"""**5.	5. Com crear una tupla amb un sol element?**"""

tupla = (5, 2, 3)

"""**6.	6. Quin tipus de dada és range(5)?**"""

type(range(5))

"""**7. Quin és el tipus de set("aab")?**"""

a = set("aab")
type (a)

"""**8.	8. Com sabries si un valor és un diccionari?**"""

diccionari = {"Ablet":"nom de persona"}

print (type(diccionari))

"""**9.	9. Quina diferència hi ha entre [] i {}?**"""

llista = [1,2,3]
diccio = {"fruita":"poma"}
print (llista, type(llista))
print (diccio, type(diccio))

"""**10.Quin tipus és int("5")?**"""

a = "5"
a = int(a)
print (int)

"""**11.	11. Quin és el tipus de list((1, 2, 3))?**"""

a = ((1, 2, 3))
a = list(a)
a, type (a)

"""**12. Quina estructura retorna dict([[1, "a"], [2, "b"]])?**"""

a = [[1, "a"], [2, "b"]]
a = dict(a)
a, type(a)

"""**13.	13. Quin és el tipus de set([1, 1, 2])?**"""

a = set([1, 1, 2])
a, type(a)

"""**14.	14. Quin tipus és "3.14"?**"""

a =  "3.14"
type(a)

"""**15.	15. Com pots verificar si un objecte és de tipus tuple?**"""

a = (1,2,3)
type(a)

"""**16.	16. Quin és el resultat de type("100" + "200")?**"""

a = ("100"+ "200")
type (a)

"""**17.	17. Com sabries si un objecte és modificable (mutable)?**"""

strri = "abb"
strri = strri + "C"
print (strri)

"""**18. Quin tipus de dada és un fitxer obert amb open()?**"""

a = open("file.txt", "w")
type(a)

"""**19. Com comproves si una clau existeix en un diccionari?**"""

diccio = {"verduras":"patatas"}
print (diccio.keys())

"""**20.	20. Quin és el tipus de {"x": [1, 2]}?**"""

a = {"x": [1, 2]}
type(a)

"""**21.	1. Converteix "123" en enter.**"""

a = "123"
a = int(a)
a, type(a)

"""**22.	2. Converteix 10 en string.**"""

a =10
a = str(a)
a, type(a)

"""**23.	3. Converteix 3.9 en enter.**"""

a = 3.9
a = int(a)
a, type(a)

"""**24.	4. Què retorna float("1.1")?**"""

a =  float("1.1")
a, type(a)

"""**25.	5. Converteix la tupla (1, 2, 3) en llista.**"""

a = (1, 2, 3)
a = list(a)
a, type(a)

"""**26.	6. Converteix la llista [1, 2, 2] en conjunt.**"""

a =  [1, 2, 2]
a = set(a)
a, type(a)

"""27.	7. Què passa si fas int("hola")?
Dona Error perquè un str no es pot convertir en int. **texto en negrita**
"""

try:
   a = int("hola")
   print(a)
except:
   print("No es pot, bèstia!!!")

"""**28.	8. Com convertir {"a": 1} en una llista de tuples?**"""

a =  {"a": 1}
a = [tuple(a.keys()), tuple(a.values())]
a

"""**29.	9. Com convertir range(4) en llista?**"""

a = range(4)
a = list(a)
a

"""**30.	10. Converteix "True" en booleà.**"""

a = "True"
a =bool(a)
a, type(a)

"""**31.	11. Quina diferència hi ha entre str(10.5) i repr(10.5)?**"""

a = str(10.5)
b = repr(10.5)
type(a), type(b)

"""**32.	12. Què retorna bool(0)?**"""

bool(0)

"""**33.	13. Com convertir un número decimal a enter sense error?**"""

a = 1.2
a = int(a)
a, type(a)

"""**34.	14. Què passa si fas list(123)?**"""

try:
  a = list(123)
  print(a)
except:
  print("Es una tupla, no se puede modificar ni asignar")

"""**35.	15. Converteix ["1", "2", "3"] a enters en una sola línia.**"""

a =  ["1", "2", "3"]
a = [int(a[0]),int(a[1]),int(a[2])]
a

"""**36. 1. Com accedir al valor 9 en [1, 2, [3, 4, [5, 6, 9]]]**"""

llista = [1, 2, [3, 4, [5, 6, 9]]]

llista[2][2][2]

"""**37. 2. Accedeix a "barcelona" dins {"ciutat": {"nom": "barcelona"}}.**"""

dic = {"ciutat": {"nom": "barcelona"}}

dic["ciutat"]["nom"]

"""**38. 3. Com accedir a la segona nota de {"nom": "Joan", "notes": [7, 8, 9]}?**"""

clase = {"nom": "Joan", "notes": [7, 8, 9]}
clase["notes"][1]

"""**39. 4. Quin valor retorna d["x"][0] si d = {"x": [10, 20]}?**"""

d = {"x": [10, 20]}
d["x"][0]

"""**40. 5. Com accedir al 3r caràcter del segon element d'una llista de cadenes?**

"""

ana = [1,2,3],[4,5,6]
ana[1][2]

"""**41.6. Accedeix a la clau "c" de la tercera posició en [{}, {}, {"c": 3}].**

"""

ista = [{}, {}, {"c": 3}]
dic = ista[2]
for x in dic.keys():
  print(x)

#42.7 . Com accedir a "abc" dins [[["abc"]]]?

llista = [[["abc"]]]
llista[0][0][0]

#43.8  Accedeix a l’últim element de la darrera llista dins [[1, 2], [3, 4]].
llista = [[1, 2], [3, 4]]
llista[1][1]

#44.9 Com accedir a la llista dins {"info": {"detall": [1, 2, 3]}}?

diccio = {"info": {"detall": [1, 2, 3]}}
diccio["info"]["detall"]

#45.10 Quin valor retorna d["items"][1]["preu"] si d = {"items": [{"preu": 5}, {"preu": 10}]}?
# d es una diccionario, dentro hay una lista, dentro de lista hay un diccionario
d = {"items": [{"preu": 5}, {"preu": 10}]}
d["items"][1]["preu"]

#46.11 Com afegir un valor nou dins una llista anidada?
#llista anidada = llista de llista
ista = [[1, 2], [3, 4]]
ista1 = ista[1]
ista1.append(5)
ista

#47.12 Com accedir a una clau anidada que pot no existir?

#48.13  Com accedir a la segona lletra del primer nom dins ["Joan", "Anna"]?
nom = ["Joan", "Anna"]
nom[0][1]

#49.14 Com accedir a un valor dins un set convertint-lo prèviament?

s = (1,2,3,4.,'hola')
s = set(s)
print(s{1})

#50.15 Accedeix al valor True dins {"opcions": {"actiu": True}}

diccio = {"opcions": {"actiu": True}}
diccio["opcions"]["actiu"]

#51.1 Com pots veure totes les funcions disponibles per a una cadena?

dir(str)

#52.2 Com pots consultar la documentació de max()?
help(max)

#53.3 Què retorna dir([])?
dir([])

#54.4 Quina funció builtin et diu el tipus d’un valor?

help(type)

#55.5 Com saber quins mètodes admet un diccionari?

dir(dict)

#56.6 Com saber quins mètodes admet un diccionari?

help(len)

from os.path import split
#57.7 Com obtenir ajuda sobre el mètode .split()?
help(split)

#58.8 Què fa help(print)?
help(print)

#59.9 Com comprovar si una funció té docstring?
dir(list)

#60.10 Com veure si un mètode és callable?
dir(callable)

#61.1 Què retorna "abcdef"[2:5]? (exercici slicing)

w = "abcdef"

w[2:5]

#62.2 Com obtenir els últims 3 caràcters de "programa"?

cadena = "programa"
cadena[5:]

#63.3 Com invertir "Python"? -preguntar

cadena = "Python"
invert = cadena[::-1]

print(invert)

#64.4 Accedeix a "Hola" dins "Hola món" amb slicing.

saludo = "Hola món"
saludo[:4]

#65.5  Què fa "abcdef"[::2]?

x = "abcdef"
x[::2]

#66.6 Com fer slicing per obtenir "gra" dins "programació"?
s = "programació"

s[3:6]

#67.7 Què retorna "Barcelona"[3:]?

ciutat = "Barcelona"
ciutat[3:]

#68.8 Com obtenir "Barc" amb slicing?
ciutat = "Barcelona"
ciutat[:4]

#69.9 Com es fa per copiar tota una llista amb slicing? -preguntar
num = [1, 2, 3, 4]
num2 = num[:]
num2

#70.10 Què retorna llista[1:-1] si llista = [10, 20, 30, 40]?

llista = [10, 20, 30, 40]
llista[1:-1]

#71.11 Què fa [:3] en una tupla de 5 elements?
helado = ('vainilla', 'chocolate', 'fruita', 'nata', 'pistacho')
helado[:3]

#72.12 Com eliminar els primers 2 valors d’una llista amb slicing?
llista = [2, 4, 6, 8, 10]
nou_l = llista[2:]
nou_l

#73.13 Com accedir al segon i quart element d’una llista?
#compra[start:end:step]
compra = ['fruita', 'peix', 'carn', 'oli', 'pa']
compra[1:4:2]

#74.14 Com eliminar els últims 3 caràcters d’una cadena?

cadena = "Tiro parabólico"
cadena_n = cadena[:12]
cadena_n

#75.15 Què fa [::-1] en qualsevol llista o cadena?
# [::-1] invierte una cadena o lista
cad = "publicidad"
cad[::-1]

#75.15 con lista

lista = [1, 2, 3, 4, 5]
lista[::-1]

#76 Assigna els valors 1, 2, 3 a les variables a, b, c en una línia.

a = 1; b = 2; c = 3

print(f'a = {a}, b = {b}, c = {c}')

#77 Substitueix el primer element de [100, 200, 300] per 1.

s = [100, 200, 300]
s[0] = 1
s

#78 Elimina el segon element de [10, 20, 30]
z = [10, 20, 30]
z.remove(20)
print(z)

#79 Afegeix "Hola" al final de ["Bon", "dia"]

lista = ["Bon", "dia"]
lista.append('Hola')
print(lista)

#80 Intercanvia valors entre dues variables.*

a = [9, 8, 7]
b = [1, 2, 3]
a = b
print(b)

#81 Canvia els dos últims valors de [1, 2, 3, 4] per 9

a = [1, 2, 3, 4]
a[2] = 9; a[3] = 9
print(a)

from typing_extensions import Unpack
#82 Assigna una cadena, una llista i un nombre a tres variables amb unpacking.
#El unpacking en Python nos permite asignar una lista a múltiples variables en una única línea de código.

cadena, llista, nombre = ['Bona verbena',[1, 2, 3], 'Mario']
print(nombre)

#83 Duplica la llista [1, 2] sense usar *.

llista = [1, 2]
llista2 = llista + llista
print(llista2)

#84 Assigna només els tres primers elements de [5, 6, 7, 8] a una nova llista
llista = [5, 6, 7, 8]
llista2 = llista[0:3]
print(llista2)

#85 Què passa si assignes x = y = [1, 2] i canvies x[0]?

x = y = [1, 2]
x[0] = 7
print(x)
print(y)

#86 Assigna a nom el valor "joan" capitalitzat.

nom = "joan".capitalize()
print(nom)

#87 Afegeix un valor a un conjunt.

x = set(1., 2, "Tania")
x

#88 Assigna la longitud d’un diccionari a una variable.

#89 Crea una còpia independent d’una llista

#90 Assigna una clau nova amb valor 0 a un diccionari buit.

#Ejercicos de pdf : Estructura cadena
'''
4-Comptar paraules:
Compta el número de paraules que hi ha dins d'una cadena de text que
li passeu per paràmetre (les paraules sempre estan separades per un o més espais en blanc)
Nota: Exemple de com passar un paràmetre amb espais
'''

cadena = input("Entra una frase : ")

paraula = cadena.split()

numero_paraules = len(paraula)

print(f"En la frase: {cadena} hay {numero_paraules} palabras")

''' 7- Dissenya un programa que rebi per input una frase qualsevol i compti les vocals.
Ens ha d'indicar per pantalla quina és la vocal més abundant i la vocal menys abundant.
Nota: Si una vocal no apareix té 0 coincidències i per tant és la menys abundant.
Per exemple:
user-bash$ python 6contavocals.py 'la porta esta tancada'
La a és la vocal més abundant amb 6 coincidències
La i és la vocal que és repeteix menys vegades amb 0 coincidències
'''

cadena = input("Entra una frase: ")

contador_a = 0
contador_u = 0
contador_i = 0
contador_o = 0
contador_e = 0


for car in cadena:
  if car == 'a':
    contador_a = contador_a + 1
  elif car == 'e':
    contador_e = contador_e + 1
  elif car == 'i':
    contador_i = contador_i + 1
  elif car == 'o':
    contador_o = contador_o + 1
  elif car == 'u':
    contador_u = contador_u + 1


maxi = max(contador_a,contador_u, contador_o, contador_i, contador_e)
mini = min(contador_a,contador_u, contador_o, contador_i, contador_e)

if maxi == contador_a:
  print("la a es la vocal mas abundante con", maxi, "coincidencias")
elif maxi == contador_u:
  print("la u es la vocal mas abundante con", maxi, "coincidencias")
elif maxi == contador_i:
  print("la i es la vocal mas abundante con", maxi, "coincidencias")
elif maxi == contador_o:
  print("la o es la vocal mas abundante con", maxi, "coincidencias")
else:
  print("la e es la vocal mas abundante con", maxi, "coincidencias")

if mini == contador_a:
  print("la a es la vocal menos abundante con", mini, "coincidencias")
elif mini == contador_u:
  print("la u es la vocal menos abundante con", mini, "coincidencias")
elif mini == contador_i:
  print("la i es la vocal menos abundante con", mini, "coincidencias")
elif mini == contador_o:
  print("la o es la vocal menos abundante con", mini, "coincidencias")
else:
  print("la e es la vocal menos abundante con", mini, "coincidencias")

'''
8- Escriu un programa que rebi per paràmetre una frase i reescrigui la frase afegint BONICA
PARAULA després de cada paraula
Exemple:
user-bash$ python 7reescriu.py 'la porta'
la BONICA PARAULA porta BONICA PARAULA
'''
cadena = input("Entra una frase: ")

nova_cad = cadena.split()

for car in nova_cad:
  print(f" {car} BONICA PARAULA " , end = "")

'''
9- Escriu un programa que rebi per paràmetre una frase i reescrigui la frase afegint la seva longitud
després de cada paraula
Exemple:
user-bash$ python 7reescriulen.py 'la porta tancaràs'
la2
porta5
tancaràs8'
'''

cadena = input("Escriu una frase: ")
n_cad = cadena.split()
for car in n_cad:
  print(f"{car}{len(car)}")

'''
10- Fes el mateix que el exercici 8 però escriu les paraules en la mateixa línia:
Exemple:
user-bash$ python 7reescriulen.py 'la porta contaràs'
la2 porta5 contaràs8'
'''
cadena = input("Escriu una frase: ")
nova_cad = cadena.split()

for car in nova_cad:
  print(f"{car}{len(car)} ", end ="")

#ejercicio de estructura repetitivas--> bucle while

#1 Simular un compte enrere

contador = 0
while contador < 10:
  print(contador)
  contador = contador + 1

#2. Escriure els múltiples de 2 menors o iguals a 100
# bulce while

num = 2
print(num)
while num <= 50:
  print(num * 2)
  num = num +1

#3. Escriure els 10 primers múltiples de 2
num = 2
print(num)

while num <= 10:
  print(num * 2)
  num = num + 1

#6. Sumar els múltiples de 2 menors a 100

num = 2
print(num)
while num <= 50:
  print(num * 2)
  num = num +1